{"version":3,"file":"static/js/login.a1655511.chunk.js","mappings":"sSAGaA,EAAYC,EAAAA,GAAAA,IAAH,iOAuBTC,GAXQD,EAAAA,GAAAA,GAAH,kNAWIA,EAAAA,GAAAA,GAAH,qNAWNE,EAAOF,EAAAA,GAAAA,KAAH,yGAOJG,EAAQH,EAAAA,GAAAA,MAAH,sJASLI,EAAOJ,EAAAA,GAAAA,KAAH,yIAQJK,EAAQL,EAAAA,GAAAA,MAAH,wPAYLM,EAAQN,EAAAA,GAAAA,EAAH,kFAMLO,EAASP,EAAAA,GAAAA,OAAH,qlBA2BNQ,GAAaR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,8MAaVU,EAAMV,EAAAA,GAAAA,IAAH,gG,UCxChB,EA3Dc,WACZ,OAA0BW,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAiCF,EAAAA,EAAAA,UAAS,IAA1C,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAA+BC,EAAAA,EAAAA,MAA/B,eAAOC,EAAP,KAAqBC,EAArB,KAiBA,OACE,UAACrB,EAAD,YACE,SAACW,EAAD,CAAKW,IAAKC,EAAKC,IAAI,MAAMC,MAAM,SAE/B,SAACvB,EAAD,uBACA,UAACC,EAAD,CAAMuB,eAAe,MAAMC,SAjBV,SAAAC,GACnBA,EAAEC,iBAGFT,EAFoB,CAAEP,MAAAA,EAAOE,SAAAA,IAEHe,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAChCd,GAASe,EAAAA,EAAAA,IAASD,OAGpBjB,EAAS,IACTE,EAAa,KAQX,WACE,UAACZ,EAAD,CAAO6B,KAAK,QAAZ,WACE,SAAC5B,EAAD,qBACA,SAACC,EAAD,CACE4B,KAAK,QACLD,KAAK,QACLE,MAAOtB,EACPuB,SA3BgB,SAAAR,GAAC,OAAId,EAASc,EAAES,OAAOF,QA4BvCG,UAAQ,QAIZ,UAAClC,EAAD,CAAO6B,KAAK,WAAZ,WACE,SAAC5B,EAAD,wBACA,SAACC,EAAD,CACE4B,KAAK,WACLD,KAAK,WACLE,MAAOpB,EACPqB,SArCmB,SAAAR,GAAC,OAAIZ,EAAaY,EAAES,OAAOF,QAsC9CG,UAAQ,QAGQ,IAAnBjB,EAAOkB,UACN,SAAChC,EAAD,8DAGF,SAACC,EAAD,CAAQ0B,KAAK,SAAb,oBACA,SAACzB,EAAD,CAAY+B,GAAG,YAAf,6B","sources":["page/Login/Login.styled.js","page/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  position: relative;\n  width: 600px;\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n  margin: 100px auto 30px auto;\n  align-items: center;\n  border-radius: 8px;\n  padding: 20px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 42px;\n  font-weight: 500;\n  line-height: 1.62;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n  text-align: center;\n  margin-bottom: 20px;\n  color: #232323;\n`;\n\nexport const SignIn = styled.h2`\n  width: 150px;\n  height: 50;\n  font-size: 32px;\n  font-weight: 400;\n  line-height: 1.62;\n  letter-spacing: 0.03em;\n  text-align: center;\n  margin-bottom: 20px;\n  color: #ffffff;\n`;\nexport const Form = styled.form`\n  width: 450px;\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  outline: none;\n  color: #ffffff;\n  margin-bottom: 20px;\n`;\n\nexport const Span = styled.span`\n  font-size: 16px;\n  font-weight: 400;\n  letter-spacing: 0.03em;\n  margin-bottom: 10px;\n  margin-left: 5px;\n`;\n\nexport const Input = styled.input`\n  font-family: inherit;\n  padding: 10px;\n  border-color: #605960;\n  border-radius: 3px;\n  border-color: transparent;\n  outline: none;\n  background-color: #ffffff;\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\nexport const Error = styled.p`\n  text-align: center;\n  font-size: 20px;\n  color: red;\n`;\n\nexport const Button = styled.button`\n  font-family: inherit;\n  height: 40px;\n  font-size: 16px;\n  font-weight: 500;\n  letter-spacing: 0.03em;\n  background-color: #605960;\n  color: #ffffff;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n  outline: none;\n  margin-top: 15px;\n  text-transform: uppercase;\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: transparent;\n    transform: scale(1.7);\n    color: #ffffff;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  font-size: 22px;\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 20px;\n  margin-right: 10px;\n  color: #ffffff;\n  &:hover,\n  &:focus {\n    color: #c22cc7;\n  }\n`;\n\nexport const Img = styled.img`\n  position: absolute;\n  top: -110px;\n  left: -220px;\n  z-index: -1;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useGetUserLoginMutation } from 'redux/userApi';\nimport { getLogin } from 'redux/userSlice';\nimport man from '../../image/man.png';\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n  Container,\n  // Title,\n  Span,\n  Error,\n  Img,\n  // ImgBox,\n  StyledLink,\n  SignIn,\n} from './Login.styled';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassoword] = useState('');\n\n  const dispatch = useDispatch();\n  const [getUserLogin, status] = useGetUserLoginMutation();\n\n  const hendleChangeLogin = e => setEmail(e.target.value);\n  const hendleChangePassword = e => setPassoword(e.target.value);\n\n  const hendleSubmit = e => {\n    e.preventDefault();\n    const credentials = { email, password };\n\n    getUserLogin(credentials).then(({ data }) => {\n      dispatch(getLogin(data));\n    });\n\n    setEmail('');\n    setPassoword('');\n  };\n\n  return (\n    <Container>\n      <Img src={man} alt=\"man\" width=\"500\" />\n\n      <SignIn>Sign In</SignIn>\n      <Form autoCapitalize=\"off\" onSubmit={hendleSubmit}>\n        <Label name=\"email\">\n          <Span>Email</Span>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={hendleChangeLogin}\n            required\n          />\n        </Label>\n\n        <Label name=\"password\">\n          <Span>Password</Span>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={hendleChangePassword}\n            required\n          />\n        </Label>\n        {status.isError === true && (\n          <Error>Oops...Invalid authorization, please try again</Error>\n        )}\n\n        <Button type=\"submit\">Login</Button>\n        <StyledLink to=\"/register\">Sign Up</StyledLink>\n      </Form>\n    </Container>\n  );\n};\nexport default Login;\n"],"names":["Container","styled","SignIn","Form","Label","Span","Input","Error","Button","StyledLink","NavLink","Img","useState","email","setEmail","password","setPassoword","dispatch","useDispatch","useGetUserLoginMutation","getUserLogin","status","src","man","alt","width","autoCapitalize","onSubmit","e","preventDefault","then","data","getLogin","name","type","value","onChange","target","required","isError","to"],"sourceRoot":""}