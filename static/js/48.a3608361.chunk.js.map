{"version":3,"file":"static/js/48.a3608361.chunk.js","mappings":"oRAWA,I,8EAAA,EATA,WAAiC,IAAfA,EAAc,wDAC9B,GAAsCC,EAAAA,EAAAA,UAASD,GAA/C,eAAOE,EAAP,KAAoBC,EAApB,KACMC,EAAY,kBAAMD,GAAe,IACjCE,EAAa,kBAAMF,GAAe,IAClCG,EAAc,kBAAMH,GAAe,SAAAI,GAAK,OAAKA,MAEnD,MAAO,CAAEL,YAAAA,EAAaE,UAAAA,EAAWC,WAAAA,EAAYC,YAAAA,I,iDCNlCE,EAAgBC,EAAAA,GAAAA,IAAH,0YAkBbC,EAAOD,EAAAA,GAAAA,KAAH,47CA4DXD,GAQOG,EAAWF,EAAAA,GAAAA,KAAH,q1BA0BfD,GASOI,GAASH,EAAAA,GAAAA,IAAH,qJASNI,GAAeJ,EAAAA,GAAAA,IAAH,iTAaZK,GAAkBL,EAAAA,GAAAA,IAAH,6FAMfM,GAAeN,EAAAA,GAAAA,IAAH,sKASZO,GAAQP,EAAAA,GAAAA,GAAH,0MAWLQ,GAAeR,EAAAA,GAAAA,OAAH,+FAKZS,GAAaT,EAAAA,GAAAA,IAAH,wR,WC9KVU,GAAWV,EAAAA,GAAAA,IAAH,qT,IAeDA,EAAAA,GAAAA,IAAH,mE,SCbXW,GAAYC,SAASC,eAAe,SA0B1C,GAxBc,SAAAC,GAmBZ,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,SAAAC,GACN,WAAXA,EAAEC,MACNJ,EAAMK,gBAIR,OADAC,OAAOC,iBAAiB,UAAWL,GAC5B,kBAAMI,OAAOE,oBAAoB,UAAWN,MAClD,CAACF,KAUGS,EAAAA,GAAAA,eACL,UAACb,GAAD,CAAUc,QATZ,SAA8BP,GACxBA,EAAEQ,gBAAkBR,EAAES,QACxBZ,EAAMK,gBAOR,SAA0CL,EAAMa,WAChDhB,K,iCCzBSiB,GAAiB5B,EAAAA,GAAAA,IAAH,0WASL,qBAAG6B,MAAkBC,wBAO9BC,GAAe/B,EAAAA,GAAAA,OAAH,yZAkBZgC,GAAYhC,EAAAA,GAAAA,IAAH,oKAGZ,qBAAG6B,MAAkBI,uBAE3BF,IACQ,qBAAGF,MAAkBK,6BAIpBC,GAAkBnC,EAAAA,GAAAA,IAAH,kaAKZ,qBAAG6B,MAAkBO,2BAGrB,qBAAGP,MAAkBQ,yBACtB,qBAAGR,MAAkBS,yBAUvBC,GAAuBvC,EAAAA,GAAAA,IAAH,+JAI7BmC,IAKShC,GAASH,EAAAA,GAAAA,IAAH,sIAQNK,GAAkBL,EAAAA,GAAAA,IAAH,iRASxBmC,IACoB,qBAAGN,MAAkBW,6BAKhCC,GAAYzC,EAAAA,GAAAA,MAAH,sGAMT0C,GAAkB1C,EAAAA,GAAAA,MAAH,gJAQfS,GAAaT,EAAAA,GAAAA,IAAH,oSAgBVO,GAAQP,EAAAA,GAAAA,GAAH,oFAML2C,GAAe3C,EAAAA,GAAAA,OAAH,mZAmBZ4C,GAAe5C,EAAAA,GAAAA,IAAH,8OASrB2C,ICnFJ,GA1DoB,SAAC,GAAmC,IAAjCxB,EAAgC,EAAhCA,aAAc0B,EAAkB,EAAlBA,YACnC,GAAsBrD,EAAAA,EAAAA,UAASqD,GAA/B,eAAOC,EAAP,KAAYC,EAAZ,KACA,GAAwBvD,EAAAA,EAAAA,UAAS,MAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAAkCzD,EAAAA,EAAAA,WAAS,GAA3C,eAAO0D,EAAP,KAAkBC,EAAlB,KAEA,GAA2BC,EAAAA,EAAAA,MAApBC,GAAP,eAEMC,EAAY,qCAAG,WAAMrC,GAAN,0EACnBkC,GAAa,GACPI,EAAetC,EAAES,OAAO8B,MAAM,GACpCT,EAAOU,IAAIC,gBAAgBH,KACrBP,EAAO,IAAIW,UACZC,OAAO,SAAUL,GACtBN,EAAQD,GANW,2CAAH,sDASZa,EAAc,qCAAG,+EACrBR,EAAiBL,GACjB7B,IAFqB,2CAAH,qDAIpB,OACE,WAACS,GAAD,YACE,UAACG,GAAD,CAAcP,QAASL,EAAvB,UACE,UAACa,GAAD,WACE,iBAAK8B,KAAMC,EAAAA,EAAS,sBAGxB,WAAC5B,GAAD,YACE,UAACI,GAAD,WACE,UAAC,GAAD,CAAQyB,IAAKlB,EAAKmB,IAAI,cAGxB,WAAC,GAAD,YACE,UAACxB,GAAD,CACEyB,KAAK,OACLC,GAAG,aACHC,OAAO,UACPC,KAAK,SACLC,SAAU,SAAArD,GAAC,OAAIqC,EAAarC,OAE9B,UAACyB,GAAD,CAAiB6B,QAAQ,aAAzB,UACE,UAAC,GAAD,WACE,iBAAKT,KAAMC,EAAAA,EAAS,qBAGxB,UAAC,GAAD,mCAGHb,IACC,UAACP,GAAD,CAAcnB,QAASqC,EAAvB,UACE,UAACjB,GAAD,WACE,iBAAKkB,KAAMC,EAAAA,EAAS,6BCfhC,GAnCuB,WACrB,MAAiDS,IAAzC/E,EAAR,EAAQA,YAAaG,EAArB,EAAqBA,WAAYC,EAAjC,EAAiCA,YACjC,GAAwB4E,EAAAA,EAAAA,KAAY,SAAA3E,GAAK,OAAIA,EAAM4E,SAA3CL,EAAR,EAAQA,KAAMM,EAAd,EAAcA,MACNC,GAASC,EAAAA,EAAAA,IAAuBF,EAAO,CAAEG,MAAOH,IAAhDC,KAEFG,EAAYH,EAAKI,UAAL,qDACgCJ,EAAKI,WACnDC,EAEJ,OACE,WAAClF,EAAD,YACE,UAACI,GAAD,CAAQ6D,IAAKe,EAAWd,IAAI,YAC5B,UAAC7D,GAAD,CAAc2E,UAAWA,KACzB,UAAC9E,EAAD,WACE,UAACI,GAAD,WACE,WAACC,GAAD,YACE,UAACE,GAAD,CAAc0D,KAAK,SAAS1C,QAAS3B,EAArC,UACE,UAACY,GAAD,WACE,iBAAKqD,KAAMC,EAAAA,EAAS,sBAGxB,UAACxD,GAAD,UAAQ8D,YAId,UAACnE,EAAD,IACCT,IACC,UAAC,GAAD,CAAO0B,aAAcvB,EAArB,UACE,UAAC,GAAD,CAAauB,aAAcvB,EAAYiD,YAAakC,UC/CjDG,GAAelF,EAAAA,GAAAA,IAAH,8KASZmF,GAAoBnF,EAAAA,GAAAA,GAAH,gFAGnB,qBAAG6B,MAAkBuD,oBCFhC,GAVyB,WACvB,OACE,UAACF,GAAD,WACE,UAACC,GAAD,mH,WCHOE,GAAWrF,EAAAA,GAAAA,GAAH,2tBAgCRsF,GAAQtF,EAAAA,GAAAA,EAAH,wKASLuF,GAAOvF,EAAAA,GAAAA,KAAH,+HAMJwF,GAAexF,EAAAA,GAAAA,OAAH,+GAMZyF,GAAYzF,EAAAA,GAAAA,IAAH,0PAaT0F,GAAc1F,EAAAA,GAAAA,MAAH,uXCYxB,GApEuB,SAAC,GAAmB,IAAjB2F,EAAgB,EAAhBA,UACxB,GAAgCnG,EAAAA,EAAAA,UAAS,IAAzC,eAAOoG,EAAP,KAAiBC,EAAjB,KACA,GAAsCrG,EAAAA,EAAAA,WAAS,GAA/C,eAAOsG,EAAP,KAAoBC,EAApB,KAEA,GAA4BC,EAAAA,EAAAA,MAArBC,GAAP,eA+BA,OACE,WAACZ,GAAD,YACE,UAACC,GAAD,qBACCQ,GACC,mCACE,UAACJ,GAAD,CACExB,KAAK,OACLgC,IAAI,KACJC,QAAQ,mBACRC,MAAOR,EACPvB,KAAMsB,EACNrB,SAxCW,SAAArD,GACnB4E,EAAY,IACR5E,EAAEQ,cAAc2E,QAAUR,GAC9BC,EAAY5E,EAAEQ,cAAc2E,WAuCtB,UAACZ,GAAD,CAActB,KAAK,SAAS1C,QA/BjB,WAEK,IAApBoE,EAASS,QACTV,IAAcC,GACD,kBAAbA,GAKAK,EAAkB,CAAEN,UAAWC,IAC5BU,SACAC,MAAK,SAAAC,GAAO,OACXC,GAAAA,GAAAA,QAAA,sDAEDC,OAAM,SAAAC,GAAK,OAAIF,GAAAA,GAAAA,MAAA,oCAClBV,GAAe,IATfA,GAAe,IAyBX,UACE,UAACN,GAAD,WACE,iBAAK3B,KAAMC,EAAAA,EAAS,uBAK1B,kCACI4B,GAAyC,2BAAOA,KAApC,8CACd,UAACH,GAAD,CAActB,KAAK,SAAS1C,QA7Cb,WAErB,OADAuE,GAAe,GACoCF,EAA3CF,GAAwB,kBA2C1B,UACE,UAACF,GAAD,WACE,iBAAK3B,KAAMC,EAAAA,EAAS,4B,WCJlC,GAtDkB,SAAC,GAAqB,IAAnBqC,EAAkB,EAAlBA,MAAOQ,EAAW,EAAXA,KAC1B,GAAgCpH,EAAAA,EAAAA,UAAS4G,GAAzC,eAAOR,EAAP,KAAiBC,EAAjB,KACA,GAAsCrG,EAAAA,EAAAA,WAAS,GAA/C,eAAOsG,EAAP,KAAoBC,EAApB,KAEA,GAA4BC,EAAAA,EAAAA,MAArBC,GAAP,eAoBA,OACE,WAACZ,GAAD,YACE,WAACC,GAAD,WAAQsB,EAAR,OACCd,GACC,mCACE,UAACJ,GAAD,CACExB,KAAK,OACLkC,MAAOR,EACPvB,KAAMuB,EACNtB,SA3BW,SAAArD,GACfA,EAAEQ,cAAc2E,QAAUR,GAC9BC,EAAY5E,EAAEQ,cAAc2E,WA2BtB,UAACZ,GAAD,CAActB,KAAK,SAAS1C,QAzBjB,WACO,IAApBoE,EAASS,QAAgBD,IAAUR,GAIrCK,GAAkB,WAAGW,EAAOhB,IACzBU,SACAC,MAAK,SAAAC,GAAO,OACXC,GAAAA,GAAAA,QAAA,eAAsBG,EAAtB,sCAEDF,OAAM,SAAAC,GAAK,OAAIF,GAAAA,GAAAA,MAAA,oBAClBV,GAAe,IATfA,GAAe,IAuBX,UACE,UAACN,GAAD,WACE,iBAAK3B,KAAMC,EAAAA,EAAS,uBAK1B,mCACE,UAACwB,GAAD,UAAOa,KACP,UAACZ,GAAD,CAActB,KAAK,SAAS1C,QAAS,kBAAMuE,GAAe,IAA1D,UACE,UAACN,GAAD,WACE,iBAAK3B,KAAMC,EAAAA,EAAS,4BCzDrB8C,GAAc7G,EAAAA,GAAAA,IAAH,qeAuBX8G,GAAW9G,EAAAA,GAAAA,GAAH,oE,uFCvBR+G,GAAe/G,EAAAA,GAAAA,MAAH,yXCuFzB,GA9EiB,SAAC,GAAkC,IAAhCgH,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WAChC,GAA0BzH,EAAAA,EAAAA,UAAS0H,IAAAA,CAAMD,EAAY,eAArD,eAAOb,EAAP,KAAce,EAAd,KACA,GAA8C3H,EAAAA,EAAAA,WAAS,GAAvD,eAAO4H,EAAP,KAAwBC,EAAxB,KASA,OAPAtG,EAAAA,EAAAA,YAAU,WACcH,SAAS0G,cAAc,QAAQC,YACjC,KAClBF,GAAmB,KAEpB,CAACA,KAGF,UAACG,GAAA,EAAD,CAAsBC,YAAaC,GAAAA,EAAnC,SACIN,GA+BA,UAACO,GAAA,EAAD,CACEvB,MAAOA,EACPwB,QAASV,IAAAA,CAAM,cACfW,QAASX,IAAAA,CAAMY,KAAKC,OACpBC,YAAY,aACZ1D,SAAU,SAAA2D,GACS,OAAbA,IAGJd,EAASc,GACTjB,EAAakB,KAAKC,UAAUF,EAASG,OAAO,kBAE9CC,YAAa,gBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,WAAYC,EAAzB,EAAyBA,WAAYC,EAArC,EAAqCA,OAArC,OACX,WAACC,GAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,WAAY,SACZC,OAAQ,MAJZ,WAOE,UAAC/B,IAAD,oBACM0B,GADN,IAEEvE,KAAK,OACL6E,IAAKT,GACDC,IAXR,OAaGC,QAbH,IAaGA,OAbH,EAaGA,EAAYQ,oBAxDnB,UAACC,GAAA,EAAD,CACE7C,MAAOA,EACP4B,YAAY,aACZH,QAASX,IAAAA,CAAMY,KAAKC,OACpBzD,SAAU,SAAA2D,GACRd,EAASc,GACQ,OAAbA,GAGJjB,EAAakB,KAAKC,UAAUF,EAASG,OAAO,iBAE9CC,YAAa,gBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,WAAYC,EAAzB,EAAyBA,WAAYC,EAArC,EAAqCA,OAArC,OACX,WAACC,GAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,WAAY,SACZC,OAAQ,MAJZ,WAOE,UAAC/B,IAAD,oBACM0B,GADN,IAEEvE,KAAK,OACL6E,IAAKT,GACDC,IAXR,OAaGC,QAbH,IAaGA,OAbH,EAaGA,EAAYQ,sBCW3B,GAtD0B,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,aAC3B,GAAgC1J,EAAAA,EAAAA,UAAS,IAAzC,eAAOoG,EAAP,KAAiBC,EAAjB,KACA,GAAsCrG,EAAAA,EAAAA,WAAS,GAA/C,eAAOsG,EAAP,KAAoBC,EAApB,KAEA,GAA4BC,EAAAA,EAAAA,MAArBC,GAAP,eAqBA,OACE,WAACZ,GAAD,YACE,UAACC,GAAD,wBACCQ,GACC,mCACE,UAAC,GAAD,CAAUkB,aARC,SAAA/F,GACjB4E,EAAY5E,IAO8BgG,WAAYiC,KAChD,UAAC1D,GAAD,CAActB,KAAK,SAAS1C,QAzBjB,WACjB,GAAwB,IAApBoE,EAASS,QAAgB6C,IAAiBtD,EAA9C,CAIE,IAAMuD,EAAOjB,KAAKkB,MAAMxD,GAExBK,EAAkB,CAAEiD,aAAcC,IAC/B7C,SACAC,MAAK,SAAAC,GAAO,OACXC,GAAAA,GAAAA,QAAA,kDAEDC,OAAM,SAAAC,GAAK,OAAIF,GAAAA,GAAAA,MAAA,gCAClBV,GAAe,QAXfA,GAAe,IAuBX,UACE,UAACN,GAAD,WACE,iBAAK3B,KAAMC,EAAAA,EAAS,uBAK1B,kCACImF,GAGA,2BAAOA,KAFP,2CAIF,UAAC1D,GAAD,CAActB,KAAK,SAAS1C,QAAS,kBAAMuE,GAAe,IAA1D,UACE,UAACN,GAAD,WACE,iBAAK3B,KAAMC,EAAAA,EAAS,4BCpClC,GAZqB,SAAC,GAA8C,IAA5CM,EAA2C,EAA3CA,KAAMgF,EAAqC,EAArCA,MAAO1D,EAA8B,EAA9BA,UAAWuD,EAAmB,EAAnBA,aAC9C,OACE,UAACrC,GAAD,WACE,WAACC,GAAD,YACE,UAAC,GAAD,CAAWV,MAAO/B,EAAMuC,KAAK,UAC7B,UAAC,GAAD,CAAgBjB,UAAWA,KAC3B,UAAC,GAAD,CAAWS,MAAOiD,EAAOzC,KAAK,WAC9B,UAAC,GAAD,CAAmBsC,aAAcA,U,WCT5BI,IAAetJ,EAAAA,EAAAA,IAAOuJ,GAAAA,GAAPvJ,CAAH,yWAmBZwJ,GAAYxJ,EAAAA,GAAAA,GAAH,gRAYTyJ,GAAiBzJ,EAAAA,GAAAA,IAAH,wLCjB3B,GAVsB,WACpB,OACE,WAACsJ,GAAD,CAAcI,GAAG,YAAjB,WACE,UAACF,GAAD,yBACA,UAACC,GAAD,WACE,iBAAK3F,KAAMC,EAAAA,EAAS","sources":["hooks/modal.js","components/UserData/UserCardAvatar/UserCardAvatar.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/UserData/UserCardAvatar/AvatarModal/AvatarModal.styled.js","components/UserData/UserCardAvatar/AvatarModal/AvatarModal.jsx","components/UserData/UserCardAvatar/UserCardAvatar.jsx","components/UserData/UserConfirmation/UserConfirmation.styled.js","components/UserData/UserConfirmation/UserConfirmation.jsx","components/UserData/UserInfoList/UserField/UserField.styled.js","components/UserData/UserInfoList/UserField/UserFieldPhone.jsx","components/UserData/UserInfoList/UserField/UserField.jsx","components/UserData/UserInfoList/UserInfoList.styled.js","components/UserData/Calendar/Calendar.styled.js","components/UserData/Calendar/Calendar.jsx","components/UserData/UserInfoList/UserField/UserFieldBirthday.jsx","components/UserData/UserInfoList/UserInfoList.jsx","components/UserData/UserPhonebook/UserPhonebook.styled.js","components/UserData/UserPhonebook/UserPhonebook.jsx"],"sourcesContent":["import { useState } from 'react';\n\nfunction useModal(open = false) {\n  const [isModalOpen, setIsModalOpen] = useState(open);\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  return { isModalOpen, openModal, closeModal, toggleModal };\n}\n\nexport default useModal;\n","import styled from 'styled-components';\n\nexport const CardContainer = styled.div`\n  width: 250px;\n  height: 300px;\n  position: relative;\n  display: block;\n  overflow: hidden;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: 13px 13px 5px -4px rgba(0, 0, 0, 0.39);\n  @media screen and (min-width: 768px) {\n    width: 270px;\n    height: 320px;\n  }\n  @media screen and (min-width: 1400px) {\n    width: 350px;\n    height: 420px;\n  }\n`;\nexport const Card = styled.span`\n  width: 500px;\n  height: 200px;\n  background: #fff;\n  display: block;\n  position: absolute;\n  bottom: -140px;\n  left: -110px;\n  transform: rotate(30deg);\n  z-index: 5;\n  opacity: 0.9;\n  transition: all 0.3s ease-in-out;\n  &::before {\n    content: '';\n    display: block;\n    width: 100%;\n    height: 100%;\n    position: relative;\n    background: #c96106;\n    transform: translateY(10px);\n    z-index: 2;\n    transition: all 0.3s ease-in-out;\n    transition-delay: 0.1s;\n  }\n  @media screen and (min-width: 768px) {\n    width: 400px;\n    height: 200px;\n    background: #fff;\n    display: block;\n    position: absolute;\n    bottom: -110px;\n    left: -90px;\n    transform: rotate(30deg);\n    z-index: 5;\n    opacity: 0.9;\n    transition: all 0.3s ease-in-out;\n    &::before {\n      content: '';\n      display: block;\n      width: 100%;\n      height: 100%;\n      position: relative;\n      /* background: #f07306; */\n      background: #c96106;\n      transform: translateY(10px);\n      z-index: 2;\n      transition: all 0.3s ease-in-out;\n      transition-delay: 0.1s;\n    }\n  }\n\n  @media screen and (min-width: 1400px) {\n    width: 500px;\n    height: 200px;\n    top: 175%;\n    left: -85px;\n    &::before {\n      background: #c96106;\n      transform: translateY(200px);\n    }\n    ${CardContainer}:hover & {\n      top: 330px;\n      &::before {\n        transform: translateY(15px);\n      }\n    }\n  }\n`;\nexport const CardRest = styled.span`\n  display: none;\n  @media screen and (min-width: 1400px) {\n    border-top: 220px solid transparent;\n    border-bottom: 190px solid transparent;\n    border-right: 288px solid #fff;\n    opacity: 0.9;\n    position: absolute;\n    display: block;\n    top: 0;\n    right: -100%;\n    transition: all 0.3s ease-in-out;\n    z-index: 2;\n    &::before {\n      border-top: 220px solid transparent;\n      border-bottom: 190px solid transparent;\n      border-right: 288px solid #64b7b2;\n      /* border-right: 288px solid #57ccfd; */\n      position: absolute;\n      content: '';\n      display: block;\n      top: -220px;\n      right: -612px;\n      transition: all 0.3s ease-in-out;\n      transition-delay: 0.2s;\n    }\n    ${CardContainer}:hover & {\n      right: -30%;\n      &::before {\n        right: -312px;\n      }\n    }\n  }\n`;\n\nexport const Avatar = styled.img`\n  position: absolute;\n  top: 50%;\n  transform: translate(0, -50%);\n  z-index: 1;\n  width: 100%;\n  border-radius: 10px;\n`;\n\nexport const AvatarBefore = styled.div`\n  position: absolute;\n  top: 50%;\n  transform: translate(0, -50%);\n  width: 100%;\n  height: 100%;\n  background: radial-gradient(\n    circle,\n    rgba(255, 255, 255, 1) 0%,\n    rgba(241, 237, 222, 0) 60%\n  );\n  box-shadow: inset 0px 0px 92px -27px rgba(133, 119, 72, 1);\n`;\nexport const ChangeContainer = styled.div`\n  position: relative;\n  transform: rotate(-30deg);\n  z-index: 10;\n`;\n\nexport const ChangeAvatar = styled.div`\n  position: absolute;\n  bottom: 150px;\n  left: 180px;\n  @media screen and (min-width: 768px) {\n    bottom: 120px;\n    left: 160px;\n  }\n`;\nexport const Title = styled.h1`\n  color: #ffffff;\n  font-size: 24px;\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n  }\n  @media screen and (min-width: 1400px) {\n    font-size: 40px;\n  }\n`;\n\nexport const ChangeButton = styled.button`\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n`;\nexport const InfoCamera = styled.svg`\n  width: 25px;\n  height: 25px;\n  margin-right: 5px;\n  fill: #ffffff;\n  margin: 0;\n  @media screen and (min-width: 768px) {\n    width: 25px;\n    height: 25px;\n  }\n  @media screen and (min-width: 1400px) {\n    width: 40px;\n    height: 40px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0rem;\n  left: 0rem;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* background-color: rgba(0, 0, 0, 0.15); */\n  background-color: rgba(0, 0, 0, 0.643);\n  overflow-y: scroll;\n  z-index: 100;\n`;\n\nexport const dark = styled.div`\n  background-color: rgba(0, 0, 0, 0.643);\n`;\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { Backdrop } from './Modal.styled';\n\nconst rootModal = document.getElementById('modal');\n\nconst Modal = props => {\n  useEffect(() => {\n    const keydownHandler = e => {\n      if (e.code !== 'Escape') return;\n      props.onCloseModal();\n    };\n\n    window.addEventListener('keydown', keydownHandler);\n    return () => window.removeEventListener('keydown', keydownHandler);\n  }, [props]);\n\n  function backdropClickHandler(e) {\n    if (e.currentTarget === e.target) {\n      props.onCloseModal();\n    }\n  }\n\n  // const backdropMode = props.mode === 'dark' ? 'dark' : '';\n\n  return createPortal(\n    <Backdrop onClick={backdropClickHandler}>{props.children}</Backdrop>,\n    rootModal\n  );\n};\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const ModalContainer = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n  height: 380px;\n  padding: 20px;\n  box-shadow: 13px 13px 5px -4px rgba(0, 0, 0, 0.39);\n  background-color: ${({ theme }) => theme.avatarModalBackround};\n  border-radius: 10px;\n  @media screen and (min-width: 1400px) {\n    width: 400px;\n    height: 500px;\n  }\n`;\nexport const CancleButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  width: 40px;\n  height: 40px;\n  background-color: transparent;\n  border-radius: 50%;\n  border: none;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.3);\n  }\n`;\nexport const CancelSvg = styled.svg`\n  width: 20px;\n  height: 20px;\n  fill: ${({ theme }) => theme.avatarModalCancleSvg};\n  transform: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  ${CancleButton}:hover & {\n    fill: ${({ theme }) => theme.avatarModalCancleSvgHover};\n  }\n`;\n\nexport const AvatarContainer = styled.div`\n  position: relative;\n  width: 250px;\n  height: 320px;\n  text-align: center;\n  background: ${({ theme }) => theme.avatarModalBackroundBox};\n  border: 2px solid #ffffff;\n\n  box-shadow: ${({ theme }) => theme.AvatarContainerShadow};\n  /* border: ${({ theme }) => theme.AvatarContainerBorder}; */\n  border-radius: 10px;\n  overflow: hidden;\n  cursor: pointer;\n  transform: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  @media screen and (min-width: 1400px) {\n    width: 350px;\n    height: 420px;\n  }\n`;\nexport const CangeAvatarContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  transform: filter 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  ${AvatarContainer}:hover & {\n    filter: blur(5px);\n  }\n`;\n\nexport const Avatar = styled.img`\n  position: absolute;\n  top: 50%;\n  transform: translate(0, -50%);\n  width: 100%;\n  border-radius: 10px;\n`;\n\nexport const ChangeContainer = styled.div`\n  display: none;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  transform: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  ${AvatarContainer}:hover & {\n    background-color: ${({ theme }) => theme.avatarModalBackroundHover};\n    display: block;\n  }\n`;\n\nexport const InputFile = styled.input`\n  max-width: 0;\n  opacity: 0;\n  visibility: hidden;\n  position: absolute;\n`;\nexport const InputFileButton = styled.label`\n  display: block;\n  width: 100%;\n  height: 100%;\n  border-color: transparent;\n  outline: none;\n  cursor: pointer;\n`;\nexport const InfoCamera = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 42%;\n  transform: translate(0, -50%);\n  width: 40px;\n  height: 40px;\n  fill: #ffffff;\n  margin: 0;\n  z-index: 1;\n  @media screen and (min-width: 768px) {\n    width: 40px;\n    height: 40px;\n    fill: #ffffff;\n  }\n`;\nexport const Title = styled.h2`\n  font-weight: 400;\n  font-size: 24px;\n  color: #ffffff;\n`;\n\nexport const CheckmarkBtn = styled.button`\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  width: 40px;\n  height: 40px;\n  background-color: transparent;\n  border-radius: 50%;\n  border: 2px solid green;\n  transform: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: green;\n  }\n`;\n\nexport const CheckmarkSvg = styled.svg`\n  width: 30px;\n  height: 30px;\n  margin-right: 5px;\n  fill: green;\n  margin: 0;\n  width: 30px;\n  height: 30px;\n  transform: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  ${CheckmarkBtn}:hover & {\n    fill: #ffffff;\n  }\n`;\n","import { useUpdateUserAvatarMutation } from 'redux/userApi';\n\nimport {\n  ModalContainer,\n  CancleButton,\n  CancelSvg,\n  AvatarContainer,\n  CangeAvatarContainer,\n  Avatar,\n  Title,\n  InputFile,\n  InputFileButton,\n  InfoCamera,\n  ChangeContainer,\n  CheckmarkBtn,\n  CheckmarkSvg,\n} from './AvatarModal.styled';\nimport sprite from '../../../../image/symbol-defs.svg';\nimport { useState } from 'react';\n\nconst AvatarModal = ({ onCloseModal, onAvatarImg }) => {\n  const [img, setImg] = useState(onAvatarImg);\n  const [file, setFile] = useState(null);\n  const [checkmark, setCheckmark] = useState(false);\n\n  const [updateUserAvatar] = useUpdateUserAvatarMutation();\n\n  const imageHandler = async e => {\n    setCheckmark(true);\n    const fileUploaded = e.target.files[0];\n    setImg(URL.createObjectURL(fileUploaded));\n    const file = new FormData();\n    file.append('avatar', fileUploaded);\n    setFile(file);\n  };\n\n  const ImageSaveClick = async () => {\n    updateUserAvatar(file);\n    onCloseModal();\n  };\n  return (\n    <ModalContainer>\n      <CancleButton onClick={onCloseModal}>\n        <CancelSvg>\n          <use href={sprite + '#icon-cancel'} />\n        </CancelSvg>\n      </CancleButton>\n      <AvatarContainer>\n        <CangeAvatarContainer>\n          <Avatar src={img} alt=\"avatar\" />\n        </CangeAvatarContainer>\n\n        <ChangeContainer>\n          <InputFile\n            type=\"file\"\n            id=\"input_file\"\n            accept=\"image/*\"\n            name=\"avatar\"\n            onChange={e => imageHandler(e)}\n          />\n          <InputFileButton htmlFor=\"input_file\">\n            <InfoCamera>\n              <use href={sprite + '#icon-image'} />\n            </InfoCamera>\n          </InputFileButton>\n          <Title>Download image</Title>\n        </ChangeContainer>\n      </AvatarContainer>\n      {checkmark && (\n        <CheckmarkBtn onClick={ImageSaveClick}>\n          <CheckmarkSvg>\n            <use href={sprite + '#icon-check_mark'} />\n          </CheckmarkSvg>\n        </CheckmarkBtn>\n      )}\n    </ModalContainer>\n  );\n};\nexport default AvatarModal;\n","import { useSelector } from 'react-redux';\nimport useModal from '../../../hooks/modal';\nimport { useGetCurrentUserQuery } from 'redux/userApi';\n\nimport DefaultAvatar from '../../../image/user.png';\nimport sprite from '../../../image/symbol-defs.svg';\nimport {\n  CardContainer,\n  CardRest,\n  Avatar,\n  Card,\n  AvatarBefore,\n  ChangeAvatar,\n  InfoCamera,\n  Title,\n  ChangeContainer,\n  ChangeButton,\n} from './UserCardAvatar.styled';\nimport Modal from 'components/Modal';\nimport AvatarModal from './AvatarModal';\n\nconst UserCardAvatar = () => {\n  const { isModalOpen, closeModal, toggleModal } = useModal();\n  const { name, token } = useSelector(state => state.users);\n  const { data } = useGetCurrentUserQuery(token, { skip: !token });\n\n  const avatarImg = data.avatarURL\n    ? `https://phonebook-server-h3zp.onrender.com/${data.avatarURL}`\n    : DefaultAvatar;\n\n  return (\n    <CardContainer>\n      <Avatar src={avatarImg} alt=\"avatar\" />\n      <AvatarBefore avatarImg={avatarImg} />\n      <Card>\n        <ChangeContainer>\n          <ChangeAvatar>\n            <ChangeButton type=\"button\" onClick={toggleModal}>\n              <InfoCamera>\n                <use href={sprite + '#icon-camera'} />\n              </InfoCamera>\n            </ChangeButton>\n            <Title>{name}</Title>\n          </ChangeAvatar>\n        </ChangeContainer>\n      </Card>\n      <CardRest></CardRest>\n      {isModalOpen && (\n        <Modal onCloseModal={closeModal}>\n          <AvatarModal onCloseModal={closeModal} onAvatarImg={avatarImg} />\n        </Modal>\n      )}\n    </CardContainer>\n  );\n};\n\nexport default UserCardAvatar;\n","import styled from 'styled-components';\n\nexport const Confirmation = styled.div`\n  max-width: 600px;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin: 0 auto;\n`;\nexport const ConfirmationTitle = styled.h2`\n  font-weight: 400;\n  font-size: 32px;\n  color: ${({ theme }) => theme.userConfirmation};\n`;\n","import { Confirmation, ConfirmationTitle } from './UserConfirmation.styled';\n\nconst UserConfirmation = () => {\n  return (\n    <Confirmation>\n      <ConfirmationTitle>\n        You have received a letter confirming your registration. After that,\n        refresh the page and Log In.\n      </ConfirmationTitle>\n    </Confirmation>\n  );\n};\nexport default UserConfirmation;\n","import styled from 'styled-components';\n\nexport const UserItem = styled.li`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n  color: #212121;\n  /* display: grid; */\n  /* grid-template-columns: 80px 230px 30px; */\n  display: flex;\n  justify-content: space-between;\n\n  padding: 5px 10px;\n  &:nth-child(2n + 1) {\n    background-color: rgba(255, 255, 255, 0.4);\n    border-radius: 5px;\n    padding: 5px 10px;\n  }\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n  @media screen and (min-width: 768px) {\n    display: grid;\n    grid-template-columns: 80px 200px 30px;\n  }\n  @media screen and (min-width: 1400px) {\n    grid-template-columns: 80px 230px 30px;\n    &:not(:last-child) {\n      margin-bottom: 15px;\n    }\n  }\n`;\n\nexport const Value = styled.p`\n  margin-right: 10px;\n  &::first-letter {\n    text-transform: uppercase;\n  }\n  @media screen and (min-width: 768px) {\n    margin: 0;\n  }\n`;\nexport const Item = styled.span`\n  /* word-wrap: break-word; */\n  text-overflow: ellipsis;\n  white-space: wrap;\n  overflow: hidden;\n`;\nexport const ButtonChange = styled.button`\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  z-index: 20;\n`;\nexport const SvgChange = styled.svg`\n  width: 20px;\n  height: 20px;\n  fill: #2b2b2f;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    fill: #c96106;\n    transform: scale(1.1);\n  }\n`;\n\nexport const InputChange = styled.input`\n  width: 200px;\n  padding: 2px 5px;\n  font-weight: 500;\n  font-size: 13px;\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n  color: #212121;\n  border-color: transparent;\n  border-radius: 5px;\n  outline: none;\n  @media screen and (min-width: 768px) {\n    width: 170px;\n  }\n  @media screen and (min-width: 1400px) {\n    width: 200px;\n  }\n`;\n","import { useState } from 'react';\nimport { useUpdateUserCurrentMutation } from 'redux/userApi';\nimport { toast } from 'react-toastify';\nimport sprite from '../../../../image/symbol-defs.svg';\nimport {\n  ButtonChange,\n  SvgChange,\n  InputChange,\n  UserItem,\n  Value,\n} from './UserField.styled';\n\nconst UserFieldPhone = ({ userPhone }) => {\n  const [userName, setUserName] = useState('');\n  const [toggleInput, setToggleInput] = useState(false);\n\n  const [updateUserCurrent] = useUpdateUserCurrentMutation();\n\n  const handleChange = e => {\n    setUserName('');\n    if (e.currentTarget.value === userName) return;\n    setUserName(e.currentTarget.value);\n  };\n\n  const handleClickBtn = () => {\n    setToggleInput(true);\n    return !userPhone ? setUserName('+380000000000') : setUserName(userPhone);\n  };\n\n  const handleSend = () => {\n    if (\n      userName.length === 0 ||\n      userPhone === userName ||\n      userName === '+380000000000'\n    ) {\n      setToggleInput(false);\n      return;\n    } else {\n      updateUserCurrent({ userPhone: userName })\n        .unwrap()\n        .then(payload =>\n          toast.success(`Your phone number has been successfully changed`)\n        )\n        .catch(error => toast.error(`Incorrect phone number format`));\n      setToggleInput(false);\n    }\n  };\n  return (\n    <UserItem>\n      <Value>Phone:</Value>\n      {toggleInput ? (\n        <>\n          <InputChange\n            type=\"text\"\n            min=\"13\"\n            pattern=\"/^\\+380\\d{9}$/\"\n            value={userName}\n            name={userPhone}\n            onChange={handleChange}\n          />\n          <ButtonChange type=\"button\" onClick={handleSend}>\n            <SvgChange>\n              <use href={sprite + '#icon-send'} />\n            </SvgChange>\n          </ButtonChange>\n        </>\n      ) : (\n        <>\n          {!userPhone ? <span>+380000000000</span> : <span>{userPhone}</span>}\n          <ButtonChange type=\"button\" onClick={handleClickBtn}>\n            <SvgChange>\n              <use href={sprite + '#icon-change'} />\n            </SvgChange>\n          </ButtonChange>\n        </>\n      )}\n    </UserItem>\n  );\n};\n\nexport default UserFieldPhone;\n","import { useState } from 'react';\nimport { useUpdateUserCurrentMutation } from 'redux/userApi';\nimport { toast } from 'react-toastify';\nimport sprite from '../../../../image/symbol-defs.svg';\nimport {\n  ButtonChange,\n  SvgChange,\n  InputChange,\n  UserItem,\n  Value,\n  Item,\n} from './UserField.styled';\n\nconst UserField = ({ value, text }) => {\n  const [userName, setUserName] = useState(value);\n  const [toggleInput, setToggleInput] = useState(false);\n\n  const [updateUserCurrent] = useUpdateUserCurrentMutation();\n\n  const handleChange = e => {\n    if (e.currentTarget.value === userName) return;\n    setUserName(e.currentTarget.value);\n  };\n  const handleSend = () => {\n    if (userName.length === 0 || value === userName) {\n      setToggleInput(false);\n      return;\n    } else {\n      updateUserCurrent({ [text]: userName })\n        .unwrap()\n        .then(payload =>\n          toast.success(`Your ${text} has been successfully changed`)\n        )\n        .catch(error => toast.error(`Invalid value`));\n      setToggleInput(false);\n    }\n  };\n  return (\n    <UserItem>\n      <Value>{text}:</Value>\n      {toggleInput ? (\n        <>\n          <InputChange\n            type=\"text\"\n            value={userName}\n            name={userName}\n            onChange={handleChange}\n          />\n          <ButtonChange type=\"button\" onClick={handleSend}>\n            <SvgChange>\n              <use href={sprite + '#icon-send'} />\n            </SvgChange>\n          </ButtonChange>\n        </>\n      ) : (\n        <>\n          <Item>{value}</Item>\n          <ButtonChange type=\"button\" onClick={() => setToggleInput(true)}>\n            <SvgChange>\n              <use href={sprite + '#icon-change'} />\n            </SvgChange>\n          </ButtonChange>\n        </>\n      )}\n    </UserItem>\n  );\n};\nexport default UserField;\n","import styled from 'styled-components';\n\nexport const UserBoxList = styled.div`\n  width: 100%;\n  height: 340px;\n  border-radius: 10px;\n  background: rgba(255, 255, 255, 0.21);\n  @media screen and (min-width: 768px) {\n    position: absolute;\n    top: 30px;\n    width: 350px;\n    right: 30px;\n    height: 260px;\n  }\n  @media screen and (min-width: 1400px) {\n    position: absolute;\n    top: 40px;\n    right: 40px;\n    width: 380px;\n    height: 340px;\n    border-radius: 10px;\n    background: rgba(255, 255, 255, 0.21);\n  }\n`;\n\nexport const UserList = styled.ul`\n  list-style: none;\n  padding: 20px 10px;\n`;\n","import styled from 'styled-components';\n\nexport const InputDesktop = styled.input`\n  width: 160px;\n  padding: 2px 5px;\n  font-weight: 500;\n  font-size: 13px;\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n  color: #212121;\n  border-color: transparent;\n  border-radius: 5px;\n  outline: none;\n\n  @media screen and (min-width: 768px) {\n    width: 140px;\n  }\n  @media screen and (min-width: 1400px) {\n    width: 160px;\n  }\n`;\n","import { useState, useEffect } from 'react';\n\nimport dayjs from 'dayjs';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport Box from '@mui/material/Box';\nimport { MobileDatePicker } from '@mui/x-date-pickers/MobileDatePicker';\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\n\nimport { InputDesktop } from './Calendar.styled';\n\nconst Calendar = ({ onHandleDate, onBirthday }) => {\n  const [value, setValue] = useState(dayjs(onBirthday, 'DD.MM.YYYY'));\n  const [isWidthCalendar, setIsWidthCalendar] = useState(false);\n\n  useEffect(() => {\n    const widthCalendar = document.querySelector('body').scrollWidth;\n    if (widthCalendar > 767) {\n      setIsWidthCalendar(true);\n    }\n  }, [setIsWidthCalendar]);\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      {!isWidthCalendar ? (\n        <MobileDatePicker\n          value={value}\n          inputFormat=\"DD.MM.YYYY\"\n          maxDate={dayjs(Date.now())}\n          onChange={newValue => {\n            setValue(newValue);\n            if (newValue === null) {\n              return;\n            }\n            onHandleDate(JSON.stringify(newValue.format('DD.MM.YYYY')));\n          }}\n          renderInput={({ inputRef, inputProps, InputProps, params }) => (\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                zIndex: '20',\n              }}\n            >\n              <InputDesktop\n                {...params}\n                type=\"data\"\n                ref={inputRef}\n                {...inputProps}\n              />\n              {InputProps?.endAdornment}\n            </Box>\n          )}\n        />\n      ) : (\n        <DesktopDatePicker\n          value={value}\n          minDate={dayjs('1922-01-01')}\n          maxDate={dayjs(Date.now())}\n          inputFormat=\"DD.MM.YYYY\"\n          onChange={newValue => {\n            if (newValue === null) {\n              return;\n            }\n            setValue(newValue);\n            onHandleDate(JSON.stringify(newValue.format('DD.MM.YYYY')));\n          }}\n          renderInput={({ inputRef, inputProps, InputProps, params }) => (\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                zIndex: '20',\n              }}\n            >\n              <InputDesktop\n                {...params}\n                type=\"data\"\n                ref={inputRef}\n                {...inputProps}\n              />\n              {InputProps?.endAdornment}\n            </Box>\n          )}\n        />\n      )}\n    </LocalizationProvider>\n  );\n};\nexport default Calendar;\n","import Calendar from 'components/UserData/Calendar';\nimport { useState } from 'react';\nimport { useUpdateUserCurrentMutation } from 'redux/userApi';\nimport sprite from '../../../../image/symbol-defs.svg';\nimport { toast } from 'react-toastify';\nimport { ButtonChange, SvgChange, UserItem, Value } from './UserField.styled';\n\nconst UserFieldBirthday = ({ userBirthday }) => {\n  const [userName, setUserName] = useState('');\n  const [toggleInput, setToggleInput] = useState(false);\n\n  const [updateUserCurrent] = useUpdateUserCurrentMutation();\n\n  const handleSend = () => {\n    if (userName.length === 0 || userBirthday === userName) {\n      setToggleInput(false);\n      return;\n    } else {\n      const date = JSON.parse(userName);\n\n      updateUserCurrent({ userBirthday: date })\n        .unwrap()\n        .then(payload =>\n          toast.success(`Your birthday has been successfully changed`)\n        )\n        .catch(error => toast.error(`Incorrect birthday format`));\n      setToggleInput(false);\n    }\n  };\n  const handleDate = e => {\n    setUserName(e);\n  };\n  return (\n    <UserItem>\n      <Value>Birthday:</Value>\n      {toggleInput ? (\n        <>\n          <Calendar onHandleDate={handleDate} onBirthday={userBirthday} />\n          <ButtonChange type=\"button\" onClick={handleSend}>\n            <SvgChange>\n              <use href={sprite + '#icon-send'} />\n            </SvgChange>\n          </ButtonChange>\n        </>\n      ) : (\n        <>\n          {!userBirthday ? (\n            <span>00.00.0000</span>\n          ) : (\n            <span>{userBirthday}</span>\n          )}\n          <ButtonChange type=\"button\" onClick={() => setToggleInput(true)}>\n            <SvgChange>\n              <use href={sprite + '#icon-change'} />\n            </SvgChange>\n          </ButtonChange>\n        </>\n      )}\n    </UserItem>\n  );\n};\nexport default UserFieldBirthday;\n","import UserFieldPhone from './UserField/UserFieldPhone';\nimport UserField from './UserField/UserField';\nimport { UserBoxList, UserList } from './UserInfoList.styled';\nimport UserFieldBirthday from './UserField/UserFieldBirthday';\n\nconst UserInfoList = ({ name, email, userPhone, userBirthday }) => {\n  return (\n    <UserBoxList>\n      <UserList>\n        <UserField value={name} text=\"name\" />\n        <UserFieldPhone userPhone={userPhone} />\n        <UserField value={email} text=\"email\" />\n        <UserFieldBirthday userBirthday={userBirthday} />\n      </UserList>\n    </UserBoxList>\n  );\n};\nexport default UserInfoList;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const PhonebookBox = styled(NavLink)`\n  position: absolute;\n  bottom: -20px;\n  right: 10px;\n  z-index: 3;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  text-decoration: none;\n  @media screen and (min-width: 768px) {\n    bottom: 5px;\n    right: 10px;\n  }\n  @media screen and (min-width: 1400px) {\n    bottom: 10px;\n    right: 20px;\n  }\n`;\n\nexport const Phonebook = styled.h2`\n  color: #62b3ae;\n  font-weight: 400;\n  font-size: 24px;\n  text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.72);\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n  @media screen and (min-width: 1400px) {\n    font-size: 24px;\n  }\n`;\nexport const PhonebookArrow = styled.svg`\n  width: 30px;\n  height: 25px;\n  fill: #62b3ae;\n  animation: arrow 2000ms infinite;\n  @keyframes arrow {\n    50% {\n      margin-right: 10px;\n    }\n  }\n`;\n","import {\n  PhonebookBox,\n  Phonebook,\n  PhonebookArrow,\n} from './UserPhonebook.styled';\nimport sprite from '../../../image/symbol-defs.svg';\n\nconst UserPhonebook = () => {\n  return (\n    <PhonebookBox to=\"/contacts\">\n      <Phonebook>PHONEBOOK</Phonebook>\n      <PhonebookArrow>\n        <use href={sprite + '#icon-arrow-right'}></use>\n      </PhonebookArrow>\n    </PhonebookBox>\n  );\n};\nexport default UserPhonebook;\n"],"names":["open","useState","isModalOpen","setIsModalOpen","openModal","closeModal","toggleModal","state","CardContainer","styled","Card","CardRest","Avatar","AvatarBefore","ChangeContainer","ChangeAvatar","Title","ChangeButton","InfoCamera","Backdrop","rootModal","document","getElementById","props","useEffect","keydownHandler","e","code","onCloseModal","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","target","children","ModalContainer","theme","avatarModalBackround","CancleButton","CancelSvg","avatarModalCancleSvg","avatarModalCancleSvgHover","AvatarContainer","avatarModalBackroundBox","AvatarContainerShadow","AvatarContainerBorder","CangeAvatarContainer","avatarModalBackroundHover","InputFile","InputFileButton","CheckmarkBtn","CheckmarkSvg","onAvatarImg","img","setImg","file","setFile","checkmark","setCheckmark","useUpdateUserAvatarMutation","updateUserAvatar","imageHandler","fileUploaded","files","URL","createObjectURL","FormData","append","ImageSaveClick","href","sprite","src","alt","type","id","accept","name","onChange","htmlFor","useModal","useSelector","users","token","data","useGetCurrentUserQuery","skip","avatarImg","avatarURL","DefaultAvatar","Confirmation","ConfirmationTitle","userConfirmation","UserItem","Value","Item","ButtonChange","SvgChange","InputChange","userPhone","userName","setUserName","toggleInput","setToggleInput","useUpdateUserCurrentMutation","updateUserCurrent","min","pattern","value","length","unwrap","then","payload","toast","catch","error","text","UserBoxList","UserList","InputDesktop","onHandleDate","onBirthday","dayjs","setValue","isWidthCalendar","setIsWidthCalendar","querySelector","scrollWidth","LocalizationProvider","dateAdapter","AdapterDayjs","DesktopDatePicker","minDate","maxDate","Date","now","inputFormat","newValue","JSON","stringify","format","renderInput","inputRef","inputProps","InputProps","params","Box","sx","display","alignItems","zIndex","ref","endAdornment","MobileDatePicker","userBirthday","date","parse","email","PhonebookBox","NavLink","Phonebook","PhonebookArrow","to"],"sourceRoot":""}