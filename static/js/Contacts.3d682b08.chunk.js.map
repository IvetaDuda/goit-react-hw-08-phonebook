{"version":3,"file":"static/js/Contacts.3d682b08.chunk.js","mappings":"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","sources":["page/Contacts/Contacts.stayled.js","components/ContactsElementList/ContactsElementList.styled.js","components/ContactsElementList/ContactsElementList.jsx","components/Spinner/Spinner.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","page/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport Background from '../../image/background.jpg';\n\nexport const ContactContainer = styled.div`\n  padding: 140px 20px 20px 20px;\n  @media screen and (min-width: 1400px) {\n    padding: 0;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const ContactDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  border-radius: 5px;\n  margin: 0 auto;\n  padding-bottom: 20px;\n  padding: 20px;\n  background-image: url(${Background});\n  background-position: center;\n  background-size: cover;\n  font: 2vw system-ui;\n  box-shadow: 13px 13px 5px -4px rgba(0, 0, 0, 0.39);\n  @media screen and (min-width: 768px) {\n    height: 100%;\n  }\n\n  @media screen and (min-width: 1400px) {\n    width: 1000px;\n    height: 500px;\n    flex-direction: row;\n    padding: 20px 20px 20px 0;\n  }\n`;\nexport const Form = styled.div`\n  width: 100%;\n  height: 500px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n  }\n\n  @media screen and (min-width: 1400px) {\n  }\n`;\nexport const Title = styled.h1`\n  font-size: 32px;\n  font-weight: 500;\n  line-height: 1.62;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n  text-align: center;\n  color: #232323;\n  margin-top: 100px;\n`;\nexport const SubTitle = styled.h2`\n  font-size: 30px;\n  font-weight: 500;\n  line-height: 1.62;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n  text-align: center;\n  margin-bottom: 10px;\n  color: #232323;\n`;\n\nexport const Contact = styled.div`\n  width: 100%;\n  height: 460px;\n  padding: 10px 10px;\n  border-radius: 5px;\n  background-color: rgba(255, 255, 255, 0.4738270308123249);\n  @media screen and (min-width: 768px) {\n    width: 600px;\n    padding: 20px 30px;\n  }\n  @media screen and (min-width: 1400px) {\n    width: 1000px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Contacts = styled.li`\n  min-width: 311px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 15px;\n  font-size: 16px;\n  font-weight: 400;\n  letter-spacing: 0.03em;\n  color: #232323;\n  padding: 0 5px 0 5px;\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n  &:nth-child(2n + 1) {\n    background-color: rgba(255, 255, 255, 0.3);\n    border-radius: 5px;\n  }\n  @media screen and (min-width: 768px) {\n    padding: 5px 10px 5px 15px;\n    &:not(:last-child) {\n      margin-bottom: 10px;\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  border-color: transparent;\n  background-color: transparent;\n  outline: none;\n  padding: 0;\n`;\nexport const SvgChange = styled.svg`\n  width: 20px;\n  height: 20px;\n  fill: #2b2b2f;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    fill: #c96106;\n    transform: scale(1.1);\n  }\n`;\nexport const SvgDelete = styled.svg`\n  width: 28px;\n  height: 28px;\n  fill: #2b2b2f;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    fill: #c96106;\n    transform: scale(1.2);\n  }\n`;\nexport const ButtonChange = styled.button`\n  cursor: pointer;\n  border-color: transparent;\n  background-color: transparent;\n  outline: none;\n  margin-right: 10px;\n  margin-left: auto;\n  padding: 0;\n  @media screen and (min-width: 768px) {\n    margin-right: 20px;\n  }\n`;\nexport const ButtonSend = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-color: transparent;\n  background-color: transparent;\n  outline: none;\n  margin-right: 15px;\n  margin-left: auto;\n  padding: 0;\n\n  @media screen and (min-width: 768px) {\n    margin-right: 25px;\n  }\n`;\n\nexport const ChangeBox = styled.div`\n  width: 100%;\n  height: 35px;\n  display: flex;\n  justify-content: space-between;\n  padding-right: 5px;\n`;\nexport const Input = styled.input`\n  width: 77px;\n  background-color: #ffffff;\n  border-color: transparent;\n  border-radius: 5px;\n  outline: none;\n  font-size: 14px;\n  font-family: Georgia, 'Times New Roman', Times, serif;\n  &:first-child {\n    margin-right: 5px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    font-size: 16px;\n    &:first-child {\n      margin-right: 20px;\n    }\n  }\n  @media screen and (min-width: 1400px) {\n    width: 130px;\n  }\n`;\nexport const ContactBox = styled.div`\n  display: grid;\n  grid-template-columns: 90px 200px;\n  font-size: 14px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  font-family: Georgia, 'Times New Roman', Times, serif;\n  @media screen and (min-width: 768px) {\n    grid-template-columns: 190px 200px;\n    font-size: 20px;\n  }\n  @media screen and (min-width: 1400px) {\n    grid-template-columns: 150px 200px;\n  }\n`;\nexport const Number = styled.span`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n`;\nexport const Loading = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n`;\n","import { useEffect, useState } from 'react';\nimport {\n  useDeleteContactMutation,\n  usePatchContactMutation,\n} from 'redux/contactsApi';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { toast } from 'react-toastify';\nimport sprite from '../../image/symbol-defs.svg';\nimport {\n  Contacts,\n  Button,\n  Input,\n  ChangeBox,\n  ButtonChange,\n  ButtonSend,\n  ContactBox,\n  Number,\n  SvgChange,\n  SvgDelete,\n  Loading,\n} from './ContactsElementList.styled';\n\nconst ContactsElementList = ({ _id, name, phone }) => {\n  const [isUpdate, setIsUpdate] = useState(false);\n  const [contentName, setContentName] = useState(name);\n  const [contentNumber, setContentNumber] = useState(phone);\n\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  const [patchContact, { isError, isSuccess, isLoading }] =\n    usePatchContactMutation();\n\n  useEffect(() => {\n    if (isError) {\n      toast.error('Invalid value');\n      setIsUpdate(true);\n    }\n    if (isSuccess) {\n      toast.success(`Contact, successfully change`);\n    }\n  }, [isError, isSuccess]);\n\n  const handleUpdateTodo = () => {\n    setIsUpdate(true);\n  };\n  const handleSend = () => {\n    if (contentName.length === 0 || contentNumber.length === 0) {\n      return;\n    } else {\n      patchContact({ _id, name: contentName, phone: contentNumber });\n      setIsUpdate(false);\n    }\n  };\n  const handleDeleted = () => {\n    deleteContact(_id);\n    toast.success(`Contact ${name}, delete`);\n  };\n  return (\n    <Contacts>\n      {isUpdate ? (\n        <ChangeBox>\n          <Input\n            type=\"text\"\n            value={contentName}\n            onChange={e => setContentName(e.currentTarget.value)}\n          />\n          <Input\n            type=\"text\"\n            value={contentNumber}\n            onChange={e => setContentNumber(e.currentTarget.value)}\n          />\n          <ButtonSend type=\"button\" onClick={handleSend}>\n            <SvgChange>\n              <use href={sprite + '#icon-send'} />\n            </SvgChange>\n          </ButtonSend>\n          <Button type=\"button\" onClick={() => setIsUpdate(false)}>\n            <SvgChange>\n              <use href={sprite + '#icon-cancel'} />\n            </SvgChange>\n          </Button>\n        </ChangeBox>\n      ) : (\n        <>\n          <ContactBox>\n            {name}: <Number>{phone}</Number>\n          </ContactBox>\n          <ButtonChange type=\"button\" onClick={handleUpdateTodo}>\n            {isLoading ? (\n              <Loading>\n                <RotatingLines strokeColor=\"#232323\" />\n              </Loading>\n            ) : (\n              <SvgChange>\n                <use href={sprite + '#icon-change'} />\n              </SvgChange>\n            )}\n          </ButtonChange>\n          <Button onClick={handleDeleted}>\n            {isDeleting ? (\n              <Loading>\n                <RotatingLines strokeColor=\"#232323\" />\n              </Loading>\n            ) : (\n              <SvgDelete>\n                <use href={sprite + '#icon-delete'} />\n              </SvgDelete>\n            )}\n          </Button>\n        </>\n      )}\n    </Contacts>\n  );\n};\n\nexport default ContactsElementList;\n","import { RotatingLines } from 'react-loader-spinner';\n\nconst Spinner = () => {\n  return (\n    <div style={styles}>\n      <RotatingLines strokeColor=\"#eeecec\" />\n    </div>\n  );\n};\nexport default Spinner;\n\nconst styles = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  height: 240px;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  &::-webkit-scrollbar-button {\n    background-image: url(&#39;&#39;);\n    background-repeat: no-repeat;\n    width: 5px;\n    height: 0px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    -webkit-border-radius: 0px;\n    border-radius: 3px;\n    background-color: #ababa9;\n  }\n\n  &::-webkit-resizer {\n    background-image: url(&#39;&#39;);\n    background-repeat: no-repeat;\n    width: 4px;\n    height: 0px;\n  }\n\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n`;\nexport const Error = styled.h2`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.62;\n  letter-spacing: 0.03em;\n  text-align: center;\n  color: #232323;\n`;\n","import { useSelector } from 'react-redux';\n\nimport { useGetContactsQuery } from 'redux/contactsApi';\nimport { getFilter } from 'redux/contactsSlice';\n\nimport ContactsElementList from '../ContactsElementList';\nimport Spinner from 'components/Spinner';\n\nimport { List, Error } from './ContactList.styled';\n\nconst ContactList = () => {\n  const { data: contacts, error, isLoading } = useGetContactsQuery();\n\n  const filter = useSelector(getFilter);\n\n  const filterContacts = () => {\n    return (\n      contacts &&\n      contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      )\n    );\n  };\n\n  const contactList = filterContacts();\n\n  const renderContacts = contacts && !isLoading && contactList.length > 0;\n  const errorMessage = error && error.originalStatus === 404;\n\n  return (\n    <List>\n      {renderContacts &&\n        contactList.map(contact => (\n          <ContactsElementList key={contact._id} {...contact} />\n        ))}\n      {isLoading && <Spinner />}\n      {errorMessage && <Error> Not Found!</Error>}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  font-size: 16px;\n  font-weight: 400;\n  letter-spacing: 0.03em;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 5px;\n  cursor: pointer;\n  outline: none;\n  color: #232323;\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 25px;\n  border-color: transparent;\n  border-radius: 3px;\n  margin-bottom: 20px;\n  outline: none;\n  padding: 5px;\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\nexport const Button = styled.button`\n  width: 100%;\n  height: 39px;\n  font-size: 16px;\n  font-weight: 500;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n  background-color: #232323;\n  color: #ffffff;\n  border-color: transparent;\n  border-radius: 3px;\n  cursor: pointer;\n  outline: none;\n  &:hover,\n  &:focus {\n    background-color: #ffffff;\n    color: #232323;\n    border-color: transparent;\n  }\n  @media screen and (min-width: 768px) {\n    width: 362px;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  useCreateContactMutation,\n  useGetContactsQuery,\n} from 'redux/contactsApi';\nimport { toast } from 'react-toastify';\n\n// import { nanoid } from 'nanoid';\n\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('+380');\n\n  const { data: contacts } = useGetContactsQuery();\n  const [createContact] = useCreateContactMutation();\n\n  // const inputNumberId = nanoid(4);\n  // const inputNameId = nanoid(4);\n\n  const hendelInputChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const addContact = data => {\n    const contactNames = contacts.map(contact => contact.name.toLowerCase());\n    const contactPhone = contacts.map(contact => contact.phone);\n\n    if (\n      !contactNames.includes(data.name.toLowerCase()) &&\n      !contactPhone.includes(data.phone)\n    ) {\n      createContact(data);\n      reset();\n\n      toast.success(`Contact, ${data.name} successfully added`);\n    } else {\n      if (contactNames.includes(data.name.toLowerCase())) {\n        toast.error(`${data.name}  is already in contacts.`);\n      } else {\n        toast.error(` ${data.phone} is already in contacts.`);\n      }\n    }\n  };\n\n  const hendelSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      // _id: nanoid(4),\n      name,\n      phone,\n    };\n    addContact(contact);\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('+380');\n  };\n\n  return (\n    <Form onSubmit={hendelSubmit}>\n      {/* <Label htmlFor={inputNameId}>Name</Label> */}\n      <Label>Name</Label>\n      <Input\n        // id={inputNameId}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        value={name}\n        onChange={hendelInputChange}\n        required\n      />\n      {/* <Label htmlFor={inputNumberId}>Number</Label> */}\n      <Label>Number</Label>\n      <Input\n        // id={inputNumberId}\n        type=\"tel\"\n        name=\"phone\"\n        // pattern=\"/^\\+380\\d{9}$/\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone phone must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        value={phone}\n        placeholder=\"+380\"\n        onChange={hendelInputChange}\n        required\n      />\n      <Button type=\"submit\">Add Contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const FilterDiv = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 30px;\n  z-index: 2;\n  padding: 0 10px;\n  @media screen and (min-width: 768px) {\n    padding: 0 15px;\n  }\n  @media screen and (min-width: 1400px) {\n    padding: 0 20px;\n  }\n`;\nexport const Label = styled.label`\n  font-size: 18px;\n  font-weight: 400;\n  letter-spacing: 0.03em;\n  text-align: center;\n  margin-bottom: 20px;\n  color: #232323;\n`;\nexport const Input = styled.input`\n  width: 100%;\n  height: 20px;\n  outline: none;\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n  border-color: transparent;\n  border-radius: 3px;\n  padding: 5px 0 5px 20px;\n  @media screen and (min-width: 768px) {\n    width: 100%;\n    padding: 5px 0 5px 30px;\n  }\n  @media screen and (min-width: 1400px) {\n    padding: 5px 5px 5px 30px;\n  }\n`;\nexport const Search = styled.svg`\n  width: 12px;\n  height: 12px;\n  position: absolute;\n  top: 55px;\n  left: 4px;\n  @media screen and (min-width: 768px) {\n    width: 14px;\n    left: 8px;\n  }\n  @media screen and (min-width: 1400px) {\n    width: 16px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter, changeFilter } from 'redux/contactsSlice';\n\nimport { FilterDiv, Label, Input, Search } from './Filter.styled';\nimport sprite from '../../image/symbol-defs.svg';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const hendleFilter = e => {\n    dispatch(changeFilter(e.currentTarget.value.trim()));\n  };\n  return (\n    <FilterDiv>\n      <Label name=\"filter\">Find contacts by name</Label>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={hendleFilter}\n      ></Input>\n      <Search>\n        <use href={sprite + '#icon-search'} />\n      </Search>\n    </FilterDiv>\n  );\n};\nexport default Filter;\n","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  ContactContainer,\n  Title,\n  SubTitle,\n  ContactDiv,\n  Contact,\n  Form,\n} from './Contacts.stayled';\nimport ContactList from 'components/ContactList';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\n\nconst Contacts = () => {\n  return (\n    <ContactContainer>\n      <ContactDiv>\n        <Form>\n          <Title>Phonebook</Title>\n          <ContactForm />\n        </Form>\n        <Contact>\n          <SubTitle>Contacts</SubTitle>\n          <Filter />\n          <ContactList />\n        </Contact>\n      </ContactDiv>\n      <ToastContainer autoClose={3000} theme=\"dark\" />\n    </ContactContainer>\n  );\n};\nexport default Contacts;\n"],"names":["ContactContainer","styled","ContactDiv","Background","Form","Title","SubTitle","Contact","Contacts","Button","SvgChange","SvgDelete","ButtonChange","ButtonSend","ChangeBox","Input","ContactBox","Number","Loading","_id","name","phone","useState","isUpdate","setIsUpdate","contentName","setContentName","contentNumber","setContentNumber","useDeleteContactMutation","deleteContact","isDeleting","isLoading","usePatchContactMutation","patchContact","isError","isSuccess","useEffect","toast","type","value","onChange","e","currentTarget","onClick","length","href","sprite","strokeColor","style","styles","display","justifyContent","alignItems","List","Error","useGetContactsQuery","contacts","data","error","filter","useSelector","getFilter","contactList","contact","toLowerCase","includes","renderContacts","errorMessage","originalStatus","map","Label","setName","setPhone","useCreateContactMutation","createContact","hendelInputChange","event","target","reset","onSubmit","preventDefault","contactNames","contactPhone","addContact","pattern","title","required","placeholder","FilterDiv","Search","dispatch","useDispatch","changeFilter","trim","autoClose","theme"],"sourceRoot":""}